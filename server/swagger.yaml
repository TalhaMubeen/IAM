openapi: 3.0.0
info:
  title: IAM System API
  version: 1.0.0
  description: Identity and Access Management System API

servers:
  - url: /api
    description: API base URL

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Error message

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: john@example.com
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Group:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Administrators
        description:
          type: string
          example: System administrators group
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Admin
        description:
          type: string
          example: Administrator role
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Module:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Users
        description:
          type: string
          example: User management module
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Permission:
      type: object
      properties:
        id:
          type: integer
          example: 1
        module_id:
          type: integer
          example: 1
        action:
          type: string
          example: create
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: password123
                email:
                  type: string
                  format: email
                  example: john@example.com
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      tags:
        - Users
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /groups:
    get:
      tags:
        - Groups
      summary: Get all groups
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /roles:
    get:
      tags:
        - Roles
      summary: Get all roles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /modules:
    get:
      tags:
        - Modules
      summary: Get all modules
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of modules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /permissions:
    get:
      tags:
        - Permissions
      summary: Get all permissions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /health:
    get:
      tags:
        - System
      summary: Health check endpoint
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: string
                    example: Service is healthy
                  timestamp:
                    type: string
                    format: date-time
                  services:
                    type: object
                    properties:
                      database:
                        type: string
                        example: connected 